
Com (Component Object Model : 구성요소 개체 모델)
	목적
		상호 작용할 수 있는 이진 소프트웨어 구성 요소를 만들기 위한 플랫폼 
		독립적이고 분산된 개체 지향 시스템
		Microsoft의 OLE(복합 문서) 및 ActiveX(인터넷 지원 구성 요소) 기술의 기초
		
	해당하는 경우
		다양한 프로그래밍 언어로 만들 수 있다
		c++와 같은 개체 지향 언어는 com 개체의 구현을 간소화하는 프로그래밍 메커니즘을 제공
	
Com 소개
	런타임에 상호 작용하는 재사용 가능한 소프트웨어 라이브러리를 만들기 위한 이진 상호 운용성 표준을 정의
	COM 라이브러리를 애플리케이션으로 컴파일할 요구 사항 없이 사용할 수 있습
	Microsoft 제품 및 기술의 기초
	
	많은 운영 체제 및 하드웨어 플랫폼에 적용되는 이진 표준을 정의
	구현 언어와 독립적이므로 C++ 및 .NET Framework 다른 프로그래밍 언어를 사용하여 COM 라이브러리를 만들 수 있습
	
	플랫폼 간 소프트웨어를 다시 사용할 수 있도록 하는 모든 기본 개념을 제공
		구성 요소 간의 함수 호출에 대한 이진 표준입니다.
		강력한 형식의 함수를 인터페이스로 그룹화하기 위한 프로비전입니다.
		다형성, 기능 검색 및 개체 수명 추적을 제공하는 기본 인터페이스입니다.
		구성 요소 및 해당 인터페이스를 고유하게 식별하는 메커니즘입니다.
		배포에서 구성 요소 인스턴스를 만드는 구성 요소 로더입니다.
		
	호스트 및 플랫폼에서 코드를 다시 사용하도록 설정하는 것은 COM의 핵심
	재사용 가능한 인터페이스 구현의 이름은 구성 요소, 구성 요소 개체 또는 COM 개체
	구성 요소는 하나 이상의 COM 인터페이스를 구현
	
개체 및 인터페이스
	COM 개체는 멤버 함수 컬렉션인 인터페이스를 통해 해당 기능을 노출
	COM 인터페이스는 구성 요소의 예상 동작 및 책임을 정의하며, 작은 관련 작업 집합을 제공하는 강력한 형식의 계약을 지정
	COM 구성 요소 간의 모든 통신은 인터페이스를 통해 발생하며 구성 요소에서 제공하는 모든 서비스는 해당 인터페이스를 통해 노출
	호출자는 인터페이스 멤버 함수에만 액세스할 수 있습
	내부 상태는 인터페이스에 노출되지 않는 한 호출자가 사용할 수 없습
	
	모든 인터페이스에는 IID라는 고유한 인터페이스 식별자가 있어 사람이 읽을 수 있는 이름으로 발생할 수 있는 충돌을 제거
		 IID는 
			 OSF(Open Software Foundation) DCE(분산 컴퓨팅 환경)에서 정의한 UUID(유니버설 고유 ID)와 동일한 GUID(Globally Unique Identifier)
	
	새 인터페이스를 만들 때 해당 인터페이스에 대한 새 식별자를 만들어야 합

인터페이스 구현
	COM 인터페이스의 인스턴스는 단독으로 만들 수 없습, 대신 인터페이스를 구현하는 클래스의 인스턴스를 만듭
	
	
--------참고
https://nomad-programmer.tistory.com/205