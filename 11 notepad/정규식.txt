정규식
	텍스트를 처리하는 강력하고 유연하며 효율적인 방법 제공
		특정 문자 패턴을 찾습니다.
		텍스트의 유효성을 검사하여 미리 정의된 패턴(예: 전자 메일 주소)과 일치하는지 확인합니다.
		텍스트 하위 문자열을 추출, 편집, 바꾸기 또는 삭제합니다.
		보고서를 생성하기 위해 추출된 문자열을 컬렉션에 추가합니다.
	
	정규식 엔진 - System.Text.RegularExpressions.Regex
		텍스트에서 식별할 정규식 패턴
		정규식 패턴에 대해 구문 분석할 텍스트
		
	정규식 패턴
		\b	단어 경계를 시작합니다.
		(\w+?)	하나 이상의 단어 문자(가능한 한 적은 문자)를 찾습니다. 
				이러한 단어 문자는 함께 \1이라고 할 수 있는 그룹을 형성합니다.
		\s	공백 문자를 찾습니다.
		\1	명명 \1된 그룹과 같은 부분 문자열과 일치합니다.
		\b	단어 경계를 찾습니다.		
		\$	입력 문자열에서 단일 달러 기호($)를 찾습니다. 
			정규식 패턴 문자열에는 백슬래시가 포함되어 달러 기호가 정규식 앵커로 해석되는 것이 아니라 리터럴로 해석될 것임을 나타냅니다. 
			$ 기호만으로도 정규식 엔진이 문자열의 끝에서 일치를 시작하려고 시도해야 함을 나타냅니다. 
			현재 문화권의 통화 기호가 정규식 기호로 잘못 해석되지 않도록 하기 위해 이 예제에서는 메서드를 호출 Regex.Escape 하여 문자를 이스케이프합니다.
		\s*	
			0개 이상의 공백 문자를 찾습니다.
		[-+]?	
			양수 또는 음수 기호가 0개 또는 1개씩 나타나는지 찾습니다.		
		([0-9]{0,3}(,[0-9]{3})*(\.[0-9]+)?)	
			외부 괄호는 이 식을 캡처링 그룹 또는 하위 식으로 정의합니다. 일치 항목을 찾은 경우 일치하는 문자열의 이 부분에 대한 정보는 Group 속성에서 반환하는 GroupCollection 개체의 두 번째 Match.Groups 개체에서 검색할 수 있습니다. 
			컬렉션의 첫 번째 요소는 전체 일치 항목을 나타냅니다.
		[0-9]{0,3}	
			10진수 0-9를 0~3개 찾습니다.
		(,[0-9]{3})*	
			그룹 구분 기호 하나 다음에 세 개의 10진수가 있는 0개 이상의 일치 항목을 찾습니다.		
		\.	
			단일 소수 구분 기호를 찾습니다.
		[0-9]+	
			하나 이상의 10진수를 찾습니다.
		(\.[0-9]+)?	
			소수 구분 기호 다음에 하나 이상의 10진수가 있는 0개 이상의 일치 항목을 찾습니다.
			