Reflection
	MSDN https://docs.microsoft.com/ko-kr/dotnet/csharp/programming-guide/concepts/reflection
		- 리플렉션은 어셈블리, 모듈 및 형식을 설명하는 개체(Type 형식)를 제공
		- 리플렉션을 사용하면 동적으로 형식 인스턴스를 만들거나, 
		형식을 기존 개체에 바인딩하거나, 
		기존 개체에서 형식을 가져와 해당 메서드를 호출하거나, 필드 및 속성에 액세스할 수 있음
		- 코드에서 특성을 사용하는 경우 리플렉션은 특성에 대한 액세스를 제공
	개요
		프로그램 메타데이터의 특성에 액세스해야 하는 경우
		어셈블리에서 형식을 검사하고 인스턴스화 하려는 경우
		런타임에 새 형식을 빌드하려는 경우
		런타임에 바인딩을 수행하고 런타임에 생성된 형식의 메서드에 액세스 하려는 경우
	
	
	
	??
	- Reflection 기능이란 인스턴스를 동적으로 할당하거나 함수나 필드 및 속성에 동적으로 호출할 수 있는 기능
	- .NET 객체의 클래스 타입, 메서드, 프로퍼티 등의 메타 정보를 런타임 중에 알아내는 기능을 제공
	- 메서드 호출, 프로퍼티를 변경하는 작업도 가능	
	
	-----------------------------------------
	
프로젝트 형식에 따라 참조 관리자 대화 상자의 왼쪽에 다음과 같은 다양한 범주가 표시됩니다.
	- 어셈블리 에는 프레임워크 및 확장 하위 그룹이 포함됩니다.
		참조에 사용할 수 있는 .NET 어셈블리를 모두 나열
		GAC(전역 어셈블리 캐시)의 어셈블리는 표시되지 않음 
			런타임 환경의 일부이기 때문
		
	- COM 에는 참조에 사용할 수 있는 모든 COM 구성 요소가 나열됩니다.
	- 프로젝트
	- 공유 프로젝트
	- Windows 에는 핵심 및 확장 하위 그룹이 포함됩니다. 개체 브라우저 를 사용하여 Windows SDK 또는 확장명 SDK에서 참조를 탐색할 수 있습니다.
	- 찾아보기 에는 최근 항목 하위 그룹이 포함됩니다.